#! /usr/bin/env bash
set -e

COMPOSE_TOOL="${COMPOSE_TOOL:=docker compose}"

function usage() {
    cat <<EOF
    Please provide 3 arguments 
      - -d | a database type (mysql|postgres)
      - -i | image path (mysql:8)
      - -f | a path to a docker-compose tempalte
    EG:
      ./scripts/test_database -d postgres -i postgres:11 -f ./resources/test/docker-compose-psql-tmpl.yaml
EOF
    
    exit 2
}

while getopts :d:i:f:c FOUND
do
    case $FOUND in
        d)  DATABASE="${OPTARG}"
            ;;
        i)  IMAGE="${OPTARG}"
            ;;
        f)  TMPL_PATH="${OPTARG}"
            ;;
        \:) usage
            ;;
        \?) usage 
            ;;
        esac >&2
    done
shift $(($OPTIND - 1))

if ! [[ $DATABASE == "postgres" || $DATABASE == "mysql" ]]; then
    echo "Database can't be recognized"
    usage
fi

if  [ -z "$IMAGE" ]; then
    echo "Image is not set"
    usage
fi

if  [ -z "$TMPL_PATH" ]; then
    echo "A path to a template is not set"
    usage
fi

TARGET_COMPOSE="gen-docker-compose-$DATABASE.yml"

export IMAGE
envsubst < "$TMPL_PATH" > "$TARGET_COMPOSE"

bash -c "${COMPOSE_TOOL} -f ${TARGET_COMPOSE} down"
bash -c "${COMPOSE_TOOL} -f ${TARGET_COMPOSE} up -d"
sleep 10

go test -count=1 -tags tests -run "Test${DATABASE^}" ./... -v -cover
bash -c "${COMPOSE_TOOL} -f ${TARGET_COMPOSE} down"
rm -f "$TARGET_COMPOSE"

