name: Publish Docker image

on:
  release:
    types: [published, edited]

env:
  manufacturer: db-operator
  product_name: db-operator
  go_version: "1.22.2"
  go_os: linux
  main_go_path: ./cmd/main.go

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      matrix:
        include:
          - go_arch: "amd64"
            docker_arch: "amd64"
          - go_arch: "arm64"
            docker_arch: "arm64/v8"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.go_version }}

      - name: Compile Binary
        env:
          GOOS: ${{ env.go_os }}
          GOARCH: ${{ matrix.go_arch }}
          CGO_ENABLED: "0"
        run: |
          go build -tags build -o ${{ env.product_name }} \
            -ldflags="-X \"github.com/db-operator/db-operator/internal/helpers/common.OperatorVersion=${{ github.event.release.tag_name }}\"" \
            ${{ env.main_go_path }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set action link variable
        run: echo "LINK=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV

      - name: Build and export
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: Dockerfile-ci
          platforms: ${{ env.go_os }}/${{ matrix.docker_arch }}
          build-args: |
            OPERATOR_VERSION=${{ github.ref_name }}
          tags: |
            ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:latest-${{ matrix.go_arch }}
            ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:${{ github.event.release.tag_name }}-${{ matrix.go_arch }}
          labels: |
            action_link=${{ env.LINK }}
            actor=${{ github.actor }}
            sha=${{ github.sha }}
            ref=${{ github.ref }}

  push_to_ghcr:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a docker manifest for a versioned container
        run: |
          docker buildx imagetools create -t ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:${{ github.event.release.tag_name }} \
            ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:${{ github.event.release.tag_name }}-amd64 \
            ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:${{ github.event.release.tag_name }}-arm64

      - name: Create a manifest for the latest container
        run: |
          docker buildx imagetools create -t ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:latest \
            ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:latest-amd64 \
            ghcr.io/${{ env.manufacturer }}/${{ env.product_name }}:latest-arm64

